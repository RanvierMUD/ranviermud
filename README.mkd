<p align="center"><img class="readme-logo" src="https://raw.githubusercontent.com/shawncplus/ranviermud/staging/resources/logo.png"></p>

# ranvier
NodeJS based MUD engine

See the [staging](https://github.com/shawncplus/ranviermud/tree/staging) branch for the latest features.

Ranvier is _not_ a websocket MUD. It does not have a web client. It is a plain ol' fashioned telnet MUD. Any client you use to connect to the MUD you played 15 years ago will work with Ranvier.

## Documentation

Docs can be found on our website [ranviermud.com](http://www.ranviermud.com)

## Slack

We have a slack channel you can use to ask questions, suggest features, or just keep up to date with the project. [https://ranviermud.slack.com](https://ranviermud.slack.com)

[Get an invite](https://ranviermud.signup.team/)

## Features
* Robust bundle system: Nearly every aspect of the game can be modified without changing the core and allows for easy packaging and sharing of commands/areas/items/npcs/channels/behaviors.
* Scripting support: It's in Javascript! No need for a shitty DSL. The codebase is javascript, the scripting is javascript.
* Scripting is event-based. Put a listener in the script attached to your mob and it'll automagically happen when the event is emitted. Adding new events is easy as npc.emit('eventName'); See documentation on node event emitters for more.
* Pfile saving in JSON, easy to parse for external usage.
* Rooms, items, and npcs are easily described in yaml. No weird bullshit ~~~~ and byte-specific parsing that requires a GUI editor to build.
* Arbitrary room exits custom to each room not locked into n/s/e/w and it's not a pain in the ass to add them.
* Did I mention it's in blasting Javascript? No compiling, no C, no cygwin, no 15 year old spaghetti code.
* Leveling, passive/active skills, effects.
* Flexible channel system.
* Incredibly simple-to-add commands.
* Quest system allowing for starting/progress/completion from any event in the game
* Simple Diku-style combat system

## Requirements

* NodeJS >= v7.1.0

## Up and running

    git clone git://github.com/shawncplus/ranviermud
    cd ranviermud
    npm install
    sudo ./ranvier -v --save=10 --respawn=10

Connect to the server using `telnet localhost 23`

## Web API 

There is an in-progress Web interface for viewing information about the MUD and building areas in real time.
Currently, the following routes are supported:

```
GET: 
  /api/items
  /api/npcs
  /api/players
  /api/rooms
  /api/help
```

Right now, you can whitelist IPs by adding them to a key called `webWhitelist` in ranvier.json.
By default only the local host IP is whitelisted.

## Common Issues

### Debugging in Visual Studio Code

Visual Studio Code's built-in terminal will incorrectly render Ranvier output unless you set the console to "externalTerminal" or "internalTerminal", "internalConsole" will *not* work. View the relevant Visual Studio Code documentation here: https://code.visualstudio.com/docs/editor/node-debugging#_launch-configuration-attributes

## TODO

### Critical

- [ ] Respawn
- [ ] "Hotboot" - Reload anything from a bundle. Changing core will require a restart
- [X] Implement containers
- [X] Rewrite script attachment to entities with the new bundle loader
- [X] Implement equipping
- [X] Implement some kind of helper for time-based events (Implemented by way of ticks)
- [X] Completely new bundle system in place
- [X] Object handling rewritten from scratch
- [X] Remove localization
- [X] Implement global config file to allow sweeping changes without changing code
- [X] Completely rewrite helpfiles
- [X] Refactor channels to have types that will allow things like yell vs chat
    Channels were completely rewritten

### Features/Bugs

- [ ] Add and emit server events that bundles can bind to in `server-events/` that will effectly relace the old `plugin/` infrastructure
- [ ] Using the new server events create a `core-api` bundle that provides a web api with authentication against player accounts and allows access to game data based on account privileges. To be used with [Sheath](https://github.com/seanohue/sheath-ranviermud)
- [ ] Fix effects to only serialize options, not the entire effects array
- [X] Implement basic combat system

### Nice to have

- [ ] Update help to allow data like skill cost as tokens
- [ ] Web API for building/editing the world, with authentication.
- [X] Web API for getting information about the world.
- [X] Update help to autogenerate usage for channels
